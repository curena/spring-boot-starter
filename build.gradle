plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'groovy'
	id 'idea'
}

group = 'org.cecil'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	compileOnly 'org.projectlombok:lombok:1.16.22'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testCompile 'org.spockframework:spock-spring:1.3-groovy-2.5'
	testCompile 'org.codehaus.groovy:groovy-all:2.5.11'
	testCompile 'com.github.javafaker:javafaker:0.15'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

sourceSets {
	test {
		java.srcDir file('src/test/groovy')
		resources.srcDir('src/test/resources')
	}
	integrationTest {
		java.srcDir file('src/integrationTest/groovy')
		resources.srcDir('src/integrationTest/resources')
		compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
		runtimeClasspath += output + compileClasspath
	}
}

test {
	useJUnitPlatform()
}
